{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\Desktop\\\\3erBimestre\\\\Frontend3\\\\EntregaReact\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst color = value => {\n  if (value === false) {\n    return \"color: black\";\n  } else {\n    return \"\";\n  }\n};\n\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    id,\n    nombre,\n    descripcion,\n    stock,\n    sumarCarrito\n  } = _ref;\n  const [cantidadStock, setCantidadStock] = useState(stock);\n  const [texto, setTexto] = useState('Comprar');\n  const [botonOff, setBotonOff] = useState(false);\n  const styles = {\n    backgroundColor: color(value)\n  };\n\n  const click = () => {\n    if (cantidadStock > 1) {\n      sumarCarrito();\n      setCantidadStock(cantidadStock - 1);\n    } else if (cantidadStock === 1) {\n      sumarCarrito();\n      setTexto('Sin Stock');\n      setCantidadStock('agotado');\n      setBotonOff(true);\n    } else {\n      return;\n    }\n  };\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    setCantidadStock(stock);\n    setBotonOff(true);\n  }, [stock, botonOff]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: sy,\n        children: cantidadStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => click(),\n      disabled: cantidadStock === 'agotado' && botonOff !== false,\n      children: texto\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"fyW+IsKnAR7tmWwYheUFmBVy1nA=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","useEffect","color","value","Item","id","nombre","descripcion","stock","sumarCarrito","cantidadStock","setCantidadStock","texto","setTexto","botonOff","setBotonOff","styles","backgroundColor","click","sy"],"sources":["C:/Users/karen/Desktop/3erBimestre/Frontend3/EntregaReact/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\nimport React,{ useState, useEffect } from \"react\";\r\n\r\nconst color =(value)=>{\r\n  if(value===false){\r\n    return \"color: black\"\r\n}else{\r\n  return \"\"\r\n}\r\n}\r\nexport default function Item({id,nombre,descripcion,stock, sumarCarrito}) {\r\n\r\n  const [cantidadStock,setCantidadStock]= useState(stock);\r\n  const [texto,setTexto]= useState('Comprar');\r\n  const [botonOff,setBotonOff]=useState(false);\r\n  const styles ={backgroundColor:color(value)}\r\n\r\n  const click = ()=>{\r\n    if(cantidadStock>1){\r\n      sumarCarrito();\r\n      setCantidadStock(cantidadStock-1);\r\n    }else if(cantidadStock===1){\r\n      sumarCarrito();\r\n      setTexto('Sin Stock');\r\n      setCantidadStock('agotado');\r\n      setBotonOff(true);\r\n    }else{\r\n      return\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    \r\n    \r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setCantidadStock(stock)\r\n    setBotonOff(true);\r\n  }, [stock,botonOff]);\r\n  \r\n  \r\n\r\n  return (\r\n    <div className='producto' key={id}>\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>En stock:\r\n        <span style={sy}>{cantidadStock}</span>\r\n      </h5>\r\n      <button onClick={() => click()} disabled={cantidadStock==='agotado'&&botonOff!==false} key={id}>{texto}</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;;AAEA,MAAMC,KAAK,GAAGC,KAAD,IAAS;EACpB,IAAGA,KAAK,KAAG,KAAX,EAAiB;IACf,OAAO,cAAP;EACH,CAFC,MAEG;IACH,OAAO,EAAP;EACD;AACA,CAND;;AAOA,eAAe,SAASC,IAAT,OAA2D;EAAA;;EAAA,IAA7C;IAACC,EAAD;IAAIC,MAAJ;IAAWC,WAAX;IAAuBC,KAAvB;IAA8BC;EAA9B,CAA6C;EAExE,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAkCX,QAAQ,CAACQ,KAAD,CAAhD;EACA,MAAM,CAACI,KAAD,EAAOC,QAAP,IAAkBb,QAAQ,CAAC,SAAD,CAAhC;EACA,MAAM,CAACc,QAAD,EAAUC,WAAV,IAAuBf,QAAQ,CAAC,KAAD,CAArC;EACA,MAAMgB,MAAM,GAAE;IAACC,eAAe,EAACf,KAAK,CAACC,KAAD;EAAtB,CAAd;;EAEA,MAAMe,KAAK,GAAG,MAAI;IAChB,IAAGR,aAAa,GAAC,CAAjB,EAAmB;MACjBD,YAAY;MACZE,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;IACD,CAHD,MAGM,IAAGA,aAAa,KAAG,CAAnB,EAAqB;MACzBD,YAAY;MACZI,QAAQ,CAAC,WAAD,CAAR;MACAF,gBAAgB,CAAC,SAAD,CAAhB;MACAI,WAAW,CAAC,IAAD,CAAX;IACD,CALK,MAKD;MACH;IACD;EACF,CAZD;;EAcAd,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGP,EAHO,CAAT;EAKAA,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAACH,KAAD,CAAhB;IACAO,WAAW,CAAC,IAAD,CAAX;EACD,CAHQ,EAGN,CAACP,KAAD,EAAOM,QAAP,CAHM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKR;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,qCACE;QAAM,KAAK,EAAEY,EAAb;QAAA,UAAkBT;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAQ,OAAO,EAAE,MAAMQ,KAAK,EAA5B;MAAgC,QAAQ,EAAER,aAAa,KAAG,SAAhB,IAA2BI,QAAQ,KAAG,KAAhF;MAAA,UAAiGF;IAAjG,GAA4FP,EAA5F;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,GAA+BA,EAA/B;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA3CuBD,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}